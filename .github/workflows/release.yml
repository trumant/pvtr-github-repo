---
name: "Release"
on:
  workflow_dispatch:
  pull_request_target:
    types: [closed]
    branches: [main]
jobs:
  release:
    permissions:
      contents: write
      pull-requests: read
    uses: github/ospo-reusable-workflows/.github/workflows/release.yaml@26eec20abba5ae806698592c79628f6906da372c
    with:
      publish: true
      release-config-name: release-drafter.yml
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}
  goreleaser:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: write
      id-token: write
    outputs:
      attestation_matrix: ${{ steps.generate_matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@f8bdd1d8ac5e901a77a92f111440fdb1b593736b
        with:
          syft-version: v1.33.0
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v3
        with:
          subject-checksums: dist/checksums.txt
      - name: Generate attestation matrix
        id: generate_matrix
        run: |
          cd dist
          matrix=$(ls *.spdx.json | jq -R '{"sbom": ., "archive": sub("\\.spdx\\.json$"; "")}' | jq -s '{"include": .}')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
  attest-sboms:
    needs: goreleaser
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      id-token: write
    strategy:
      matrix: ${{ fromJson(needs.goreleaser.outputs.attestation_matrix) }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Attest SBOM
        uses: actions/attest-sbom@v3
        with:
          subject-path: "dist/${{ matrix.archive }}"
          sbom-path: "dist/${{ matrix.sbom }}"
